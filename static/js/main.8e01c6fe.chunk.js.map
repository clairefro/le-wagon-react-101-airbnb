{"version":3,"sources":["components/Flat.js","components/PriceMarker.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["Flat","data","setSelectedFlat","selected","imageUrl","name","price","priceCurrency","flatClasses","className","onClick","style","backgroundImage","PriceMarker","classes","Map","flats","selectedFlat","useState","latitude","longitude","zoom","pitch","bearing","viewport","setViewport","useEffect","prev","lat","lng","width","height","mapStyle","mapboxApiAccessToken","onViewportChange","transitionDuration","map","flat","id","App","setFlats","fetch","then","res","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RA0BeA,EAtBF,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,SAC7BC,EAAyCH,EAAzCG,SAAUC,EAA+BJ,EAA/BI,KAAMC,EAAyBL,EAAzBK,MAAOC,EAAkBN,EAAlBM,cAGzBC,EAAW,eAAWL,EAAW,WAAa,IAEpD,OACE,sBAAKM,UAAWD,EAAaE,QAAS,kBAAMR,EAAgBD,IAA5D,UACE,qBACEQ,UAAU,eACVE,MAAO,CACLC,gBAAgB,OAAD,OAASR,EAAT,QAGnB,sBAAKK,UAAU,aAAf,UACGJ,EADH,MACYC,EACTC,S,gBCTMM,G,MAPK,SAAC,GAAyB,IAAvBP,EAAsB,EAAtBA,MAAOH,EAAe,EAAfA,SAEtBW,EAAO,iBAAaX,EAAW,WAAa,IAElD,OAAO,qBAAKM,UAAWK,EAAhB,SAA0BR,MCqCpBS,EAtCH,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAAmB,EACPC,mBAAS,CACvCC,SAAU,WACVC,WAAY,WACZC,KAAM,GACNC,MAAO,EACPC,QAAS,IAN4B,mBAChCC,EADgC,KACtBC,EADsB,KAmBvC,OAVAC,qBAAU,WACJT,GACFQ,GAAY,SAACE,GAAD,mBAAC,eACRA,GADO,IAEVR,SAAUF,EAAaW,IACvBR,UAAWH,EAAaY,WAG3B,CAACZ,IAGF,cAAC,IAAD,2BACMO,GADN,IAEEM,MAAM,OACNC,OAAO,OACPC,SAAS,mDACTC,qBA3BJ,mGA4BIC,iBAAkB,SAACV,GAAD,OAAcC,EAAYD,IAC5CW,mBAAoB,IAPtB,SASGnB,EAAMoB,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CAAsBlB,SAAUkB,EAAKT,IAAKR,UAAWiB,EAAKR,IAA1D,SACE,cAAC,EAAD,CAAavB,MAAO+B,EAAK/B,MAAOH,SAAUc,IAAiBoB,KADhDA,EAAKC,W,MCcXC,MAlCf,WAAgB,IAAD,EACarB,mBAAS,IADtB,mBACNF,EADM,KACCwB,EADD,OAE2BtB,mBAAS,MAFpC,mBAEND,EAFM,KAEQf,EAFR,KAYb,OARAwB,qBAAU,WACRe,MACE,mFAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACzC,GAAD,OAAUuC,EAASvC,QAC1B,IAGD,sBAAKQ,UAAU,MAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,QAAf,SACGO,EAAMoB,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEEpC,KAAMoC,EACNnC,gBAAiBA,EACjBC,SAAUc,IAAiBoB,GAHtBA,EAAKC,YAQlB,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,CAAKO,MAAOA,EAAOC,aAAcA,UCjC1B4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8e01c6fe.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Flat.css\";\n\nconst Flat = ({ data, setSelectedFlat, selected }) => {\n  const { imageUrl, name, price, priceCurrency } = data;\n\n  // add 'selected' class if selected is true\n  const flatClasses = `flat ${selected ? \"selected\" : \"\"}`;\n\n  return (\n    <div className={flatClasses} onClick={() => setSelectedFlat(data)}>\n      <div\n        className=\"flat-picture\"\n        style={{\n          backgroundImage: `url(${imageUrl})`,\n        }}\n      ></div>\n      <div className=\"flat-title\">\n        {name} - {price}\n        {priceCurrency}\n      </div>\n    </div>\n  );\n};\n\nexport default Flat;\n","import React from \"react\";\n\nimport \"./PriceMarker.css\";\n\nconst PriceMarker = ({ price, selected }) => {\n  // add 'selected' class if selected is true\n  const classes = `marker ${selected ? \"selected\" : \"\"}`;\n\n  return <div className={classes}>{price}</div>;\n};\n\nexport default PriceMarker;\n","import React, { useState, useEffect } from \"react\";\nimport MapGL, { Marker } from \"react-map-gl\";\nimport PriceMarker from \"./PriceMarker\";\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoiY2xhaXJlZnJvZnJvIiwiYSI6ImNrcGE1d2FlMzBuMHQydW1uMXIwMzZlOGcifQ.Bb6AWn5nCxTSSA7pWBPuEg\";\n\nconst Map = ({ flats, selectedFlat }) => {\n  const [viewport, setViewport] = useState({\n    latitude: 45.4972159, // Montreal\n    longitude: -73.6103642, // Montreal\n    zoom: 12,\n    pitch: 0,\n    bearing: 0,\n  });\n\n  useEffect(() => {\n    if (selectedFlat) {\n      setViewport((prev) => ({\n        ...prev,\n        latitude: selectedFlat.lat,\n        longitude: selectedFlat.lng,\n      }));\n    }\n  }, [selectedFlat]);\n\n  return (\n    <MapGL\n      {...viewport}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle=\"mapbox://styles/mapbox/streets-v11?optimize=true\"\n      mapboxApiAccessToken={MAPBOX_TOKEN}\n      onViewportChange={(viewport) => setViewport(viewport)}\n      transitionDuration={200}\n    >\n      {flats.map((flat) => (\n        <Marker key={flat.id} latitude={flat.lat} longitude={flat.lng}>\n          <PriceMarker price={flat.price} selected={selectedFlat === flat} />\n        </Marker>\n      ))}\n    </MapGL>\n  );\n};\n\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\nimport Flat from \"./components/Flat\";\nimport Map from \"./components/Map\";\n\nimport \"./App.css\";\n\n// const demoFlat = {\n//   id: 145,\n//   name: \"The Stay Chez Claudette\",\n//   imageUrl:\n//     \"https://raw.githubusercontent.com/clairefro/flats-boilerplate/master/images/chez-claudette-tripadvisor.jpg\",\n//   price: 164,\n//   priceCurrency: \"CAD\",\n//   lat: 45.5264082,\n//   lng: -73.5900536,\n// };\n\nfunction App() {\n  const [flats, setFlats] = useState([]);\n  const [selectedFlat, setSelectedFlat] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      \"https://raw.githubusercontent.com/clairefro/flats-boilerplate/master/flats.json\"\n    )\n      .then((res) => res.json())\n      .then((data) => setFlats(data));\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"main\">\n        <div className=\"search\"></div>\n        <div className=\"flats\">\n          {flats.map((flat) => (\n            <Flat\n              key={flat.id}\n              data={flat}\n              setSelectedFlat={setSelectedFlat}\n              selected={selectedFlat === flat}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"map\">\n        <Map flats={flats} selectedFlat={selectedFlat} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}